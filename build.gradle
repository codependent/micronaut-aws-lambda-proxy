plugins {
    id "io.spring.dependency-management" version "1.0.6.RELEASE"
    id "com.github.johnrengelman.shadow" version "4.0.2"
    id "application"
    id "org.jetbrains.kotlin.jvm" version "1.2.61"
    id "org.jetbrains.kotlin.kapt" version "1.2.61"
    id "org.jetbrains.kotlin.plugin.allopen" version "1.2.61"
    id "org.jetbrains.kotlin.plugin.noarg" version "1.2.61"
}



version "0.1"
group "micronaut.aws.lambda.proxy"

repositories {
    mavenLocal()
    mavenCentral()
    maven { url "https://jcenter.bintray.com" }
    maven { url 'http://dynamodb-local.s3-website-us-west-2.amazonaws.com/release' }
}

dependencyManagement {
    imports {
        mavenBom 'io.micronaut:micronaut-bom:1.1.0.M2'
    }
}

configurations {
    // for dependencies that are needed for development only
    developmentOnly 
}

dependencies {
    compile "io.micronaut.aws:micronaut-function-aws-api-proxy"
    compile "io.micronaut:micronaut-http-client"
    compile "io.micronaut:micronaut-http-server-netty"
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:${kotlinVersion}"
    compile "org.jetbrains.kotlin:kotlin-reflect:${kotlinVersion}"
    compile "io.micronaut:micronaut-runtime"
    compile 'com.amazonaws:aws-java-sdk-dynamodb:1.11.504'
    kapt "io.micronaut:micronaut-inject-java"
    kapt "io.micronaut:micronaut-validation"
    kaptTest "io.micronaut:micronaut-inject-java"
    runtime "ch.qos.logback:logback-classic:1.2.3"
    runtime "org.apache.logging.log4j:log4j-core:2.8.2"
    runtime "org.apache.logging.log4j:log4j-api:2.8.2"
    runtime "org.apache.logging.log4j:log4j-slf4j-impl:2.8.2"
    runtime "com.amazonaws:aws-lambda-java-log4j2:1.1.0"
    runtime "com.fasterxml.jackson.module:jackson-module-kotlin:2.9.7"
    testCompile "io.micronaut.test:micronaut-test-core"
    testCompile "com.amazonaws:DynamoDBLocal:1.11.0"
    testCompile "org.junit.jupiter:junit-jupiter-api"
    testCompile "org.jetbrains.spek:spek-api:1.1.5"
    testRuntime "org.junit.jupiter:junit-jupiter-engine"
    testRuntime "org.jetbrains.spek:spek-junit-platform-engine:1.1.5"
    testRuntime "io.micronaut.test:micronaut-test-junit5"
}

shadowJar {
    mergeServiceFiles()
}

run.classpath += configurations.developmentOnly
test.classpath += configurations.developmentOnly
run.jvmArgs('-noverify', '-XX:TieredStopAtLevel=1')

mainClassName = "com.codependent.micronaut.awslambda.Application"
task buildZip(type: Zip) {
  from compileJava
  from processResources
  into('lib') {
    from(configurations.compileClasspath)
  }
}
shadowJar.dependsOn buildZip

test {
    useJUnitPlatform()
}

allOpen {
	annotation("io.micronaut.aop.Around")
}

noArg {
    annotation("com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBTable")
}

compileKotlin {
	kotlinOptions {
	    jvmTarget = '1.8' 
	    //Will retain parameter names for Java reflection
	    javaParameters = true 
	}
}

compileTestKotlin {
	kotlinOptions {
	    jvmTarget = '1.8' 
	    javaParameters = true 
	}
}

task copyNativeDeps(type: Copy) {
    from(configurations.compile + configurations.testCompile) {
        include '*.dll'
        include '*.dylib'
        include '*.so'
    }
    into 'build/libs'
}

test {
    dependsOn copyNativeDeps
    systemProperty "java.library.path", 'build/libs'
}
